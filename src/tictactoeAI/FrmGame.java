/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tictactoeAI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.util.Arrays;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author fabian
 */
public class FrmGame extends javax.swing.JFrame implements ActionListener{

    Box [][] BOARD;
    /**
     * Creates new form FrmGame
     */
    /*Algorithm  */
    private String algorithm;
    private final int DFS = 1;
    private final int BFS = 2;
    
    /*Players.*/
    private String player1,player2;
    private ComputadoraIA computer;
    private boolean playing, finished;
    //private String winner="";
    public final int PLAYER1 = 1;
    public final int PLAYER2 = 2;
    public boolean THINKING = false;
       
    /*Type Game  */
    public final int MANvsMAN = 1;
    public final int MANvsCOMPUTER = 2;
    public int type_game = 1;
    
    /*Turn to Player.*/
    int turn = 0;
    int GeneralTurn = 0;
    
    private JOptionPane message;
    
    /*Vector to game representation*/
    public int[] Board = new int[9]; 
    
    public FrmGame(String player2, String algorithm) {
        super("Tic Tac Toe");
        
        Arrays.fill(Board, 0);
        initComponents();
        
        this.algorithm = algorithm;
        this.player2 = player2;
        
        starMyComponents();
    }
    
    public void starMyComponents(){
        
        fillBoard();
        message("Play TIC TAC TOE !!");
        message = new JOptionPane();
        SwingUtils.setEnableContainer(panelImage3, false);
        SwingUtils.setEnableContainer(panelShadow5, false);
        if(this.player2!="" && this.algorithm != ""){
            textField2.setEditable(false);
            textField2.setText(this.player2);
            this.labelMetric4.setText("Algorithm: "+this.algorithm);
            this.type_game = 2;
        }
    }
    
    public void starGame(){
        
        if ( type_game == MANvsMAN ){
            this.player1 = textField1.getText();
            this.player2 = textField2.getText();
            
        } else {
            /*Players*/
            this.player1 = textField1.getText();
            this.player2 = textField2.getText();           
            /*Create the instance to computer.*/
            computer = new ComputadoraIA(algorithmType(algorithm));
            
        }
        
        /*We start the game in the player one*/
        this.turn = 1;
        this.GeneralTurn = PLAYER1;
        
        /*Game variables.*/
        playing = true;
        finished = false;
                
        /*Change the turn.*/
        changeTurn();
        
    }
    
    public int algorithmType(String algorithm){
        int type=0;
        if(algorithm == "DFS")
            type = 1;
        else
            type = 2;
        return type;
    }
    
    public boolean pickUp(){

        /*We found that the fields are filled.*/
        if( this.textField1.getText().equals("") ){
            message.showMessageDialog(this,"Fill player 1 name please.","[X] Error:",JOptionPane.ERROR_MESSAGE);
            return false;   
        }
        if( this.textField2.getText().equals("") ){
            message.showMessageDialog(this,"Fill player 2 name please.","[X] Error:",JOptionPane.ERROR_MESSAGE);
            return false;   
        }
        if( this.textField1.getText().equals( this.textField2.getText() )){
            message.showMessageDialog(this,"Write diferents names to players.","[X] Error:",JOptionPane.ERROR_MESSAGE);
            return false;
        }                
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        panelImage2 = new org.edisoncor.gui.panel.PanelImage();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        panelShadow1 = new org.edisoncor.gui.panel.PanelShadow();
        labelMetric1 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric2 = new org.edisoncor.gui.label.LabelMetric();
        textField1 = new org.edisoncor.gui.textField.TextField();
        textField2 = new org.edisoncor.gui.textField.TextField();
        buttonRound1 = new org.edisoncor.gui.button.ButtonRound();
        buttonRound2 = new org.edisoncor.gui.button.ButtonRound();
        panelImage4 = new org.edisoncor.gui.panel.PanelImage();
        panelImage5 = new org.edisoncor.gui.panel.PanelImage();
        panelShadow5 = new org.edisoncor.gui.panel.PanelShadow();
        labelMetric4 = new org.edisoncor.gui.label.LabelMetric();
        panelShadow2 = new org.edisoncor.gui.panel.PanelShadow();
        panelImage3 = new org.edisoncor.gui.panel.PanelImage();
        panel2 = new org.edisoncor.gui.panel.Panel();
        labelMetric5 = new org.edisoncor.gui.label.LabelMetric();
        buttonSeven1 = new org.edisoncor.gui.button.ButtonSeven();
        buttonSeven2 = new org.edisoncor.gui.button.ButtonSeven();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        panelImage2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelImage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesAI/artificial-intelligence-621_1.jpg"))); // NOI18N

        javax.swing.GroupLayout panelImage2Layout = new javax.swing.GroupLayout(panelImage2);
        panelImage2.setLayout(panelImage2Layout);
        panelImage2Layout.setHorizontalGroup(
            panelImage2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelImage2Layout.setVerticalGroup(
            panelImage2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
        );

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesAI/artificial-intelligence-image.jpg"))); // NOI18N

        panelShadow1.setBackground(new java.awt.Color(255, 255, 153));
        panelShadow1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        panelShadow1.setForeground(new java.awt.Color(255, 255, 255));

        labelMetric1.setText("Player # 1:");

        labelMetric2.setText("Player # 2:");

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });

        buttonRound1.setText("Star Game");
        buttonRound1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRound1ActionPerformed(evt);
            }
        });

        buttonRound2.setText("Exit");
        buttonRound2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRound2ActionPerformed(evt);
            }
        });

        panelImage4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesAI/o.gif"))); // NOI18N

        javax.swing.GroupLayout panelImage4Layout = new javax.swing.GroupLayout(panelImage4);
        panelImage4.setLayout(panelImage4Layout);
        panelImage4Layout.setHorizontalGroup(
            panelImage4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
        );
        panelImage4Layout.setVerticalGroup(
            panelImage4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 67, Short.MAX_VALUE)
        );

        panelImage5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesAI/x.png"))); // NOI18N

        javax.swing.GroupLayout panelImage5Layout = new javax.swing.GroupLayout(panelImage5);
        panelImage5.setLayout(panelImage5Layout);
        panelImage5Layout.setHorizontalGroup(
            panelImage5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );
        panelImage5Layout.setVerticalGroup(
            panelImage5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 59, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelShadow1Layout = new javax.swing.GroupLayout(panelShadow1);
        panelShadow1.setLayout(panelShadow1Layout);
        panelShadow1Layout.setHorizontalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelShadow1Layout.createSequentialGroup()
                        .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelShadow1Layout.createSequentialGroup()
                        .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelImage5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelImage4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(buttonRound1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonRound2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelShadow1Layout.setVerticalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow1Layout.createSequentialGroup()
                .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelShadow1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelImage4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelImage5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)))
                .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRound2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        panelShadow5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));

        javax.swing.GroupLayout panelShadow5Layout = new javax.swing.GroupLayout(panelShadow5);
        panelShadow5.setLayout(panelShadow5Layout);
        panelShadow5Layout.setHorizontalGroup(
            panelShadow5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(236, Short.MAX_VALUE))
        );
        panelShadow5Layout.setVerticalGroup(
            panelShadow5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelShadow2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));

        panelImage3.setBackground(new java.awt.Color(255, 255, 255));
        panelImage3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        panelImage3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesAI/imagen_2.jpg"))); // NOI18N

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 153, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelImage3Layout = new javax.swing.GroupLayout(panelImage3);
        panelImage3.setLayout(panelImage3Layout);
        panelImage3Layout.setHorizontalGroup(
            panelImage3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelImage3Layout.setVerticalGroup(
            panelImage3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        labelMetric5.setToolTipText("");

        buttonSeven1.setForeground(new java.awt.Color(0, 0, 0));
        buttonSeven1.setText("new Game");
        buttonSeven1.setColorDeSombra(new java.awt.Color(153, 153, 153));
        buttonSeven1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeven1ActionPerformed(evt);
            }
        });

        buttonSeven2.setForeground(new java.awt.Color(0, 0, 0));
        buttonSeven2.setText("reset Game");
        buttonSeven2.setColorDeSombra(new java.awt.Color(153, 153, 153));
        buttonSeven2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeven2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelShadow2Layout = new javax.swing.GroupLayout(panelShadow2);
        panelShadow2.setLayout(panelShadow2Layout);
        panelShadow2Layout.setHorizontalGroup(
            panelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMetric5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelImage3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelShadow2Layout.createSequentialGroup()
                        .addComponent(buttonSeven1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonSeven2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelShadow2Layout.setVerticalGroup(
            panelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMetric5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImage3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSeven1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSeven2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelShadow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelShadow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelShadow5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelShadow2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelShadow5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelShadow1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelImage2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelImage2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField2ActionPerformed

    private void buttonRound1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRound1ActionPerformed
        // TODO add your handling code here:
        if(pickUp()){
            SwingUtils.setEnableContainer(panelImage3, true);
            starGame();
            SwingUtils.setEnableContainer(panelShadow1, false);
        }        
    }//GEN-LAST:event_buttonRound1ActionPerformed

    public void move( Box mark ){
        /*Put the mark.*/
        if ( playing ){
            
            if( !THINKING )
                putMarkPlayer( mark );            
            
            if ( this.type_game == MANvsCOMPUTER && this.turn == PLAYER2 ){
                THINKING = true;
                putMarkComputer(computer.move( this.Board ));
                THINKING = false;    
            }

        }
        /*new game*/
        if( finished ){
            resetGame();
            return;
        }
        
        /*Aek if the game finished or win someone.*/
        if ( finished() != 0){
                        
            /*show the win message.*/
            if ( finished() == 1 ){
                message(player1 + " win!!");
            }else{
                message(player2 + " win!!");
            }
            
            /*Stop the game.*/
            playing = false;
            finished = true;
            
            
        } else if ( full() ){
            message("Equals !!");
            
            /*Stop the actual game.*/
            playing = false;
            finished = true;
        }
        
        /*Change the turn of the player.*/
        changeTurn();
    }
    
    
    /*Change turn*/
    public void changeTurn(){
        
        /*if we're playing.*/
        if ( !playing )
            return;
        
        /*If the turn is of the player one..*/
        if ( turn == PLAYER1 )
            message("Turn of " + player1 );
        else
            message("Turn of " + player2 );              
    }
    
    public void message(String message){
        this.labelMetric5.setText(message);
    }
    
    private void buttonRound2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRound2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonRound2ActionPerformed

    private void buttonSeven1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeven1ActionPerformed
      FrmMenuOponent menu = new FrmMenuOponent();
      menu.setVisible(true);
      this.setVisible(false);
    }//GEN-LAST:event_buttonSeven1ActionPerformed

    private void buttonSeven2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeven2ActionPerformed
        resetGame();
        SwingUtils.setEnableContainer(panelImage3, true);
    }//GEN-LAST:event_buttonSeven2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonRound buttonRound1;
    private org.edisoncor.gui.button.ButtonRound buttonRound2;
    private org.edisoncor.gui.button.ButtonSeven buttonSeven1;
    private org.edisoncor.gui.button.ButtonSeven buttonSeven2;
    private org.edisoncor.gui.label.LabelMetric labelMetric1;
    private org.edisoncor.gui.label.LabelMetric labelMetric2;
    private org.edisoncor.gui.label.LabelMetric labelMetric4;
    private org.edisoncor.gui.label.LabelMetric labelMetric5;
    private org.edisoncor.gui.panel.Panel panel1;
    private org.edisoncor.gui.panel.Panel panel2;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private org.edisoncor.gui.panel.PanelImage panelImage2;
    private org.edisoncor.gui.panel.PanelImage panelImage3;
    private org.edisoncor.gui.panel.PanelImage panelImage4;
    private org.edisoncor.gui.panel.PanelImage panelImage5;
    private org.edisoncor.gui.panel.PanelShadow panelShadow1;
    private org.edisoncor.gui.panel.PanelShadow panelShadow2;
    private org.edisoncor.gui.panel.PanelShadow panelShadow5;
    private org.edisoncor.gui.textField.TextField textField1;
    private org.edisoncor.gui.textField.TextField textField2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
                if(e.getSource()== BOARD[i][j].A){
                    move(BOARD[i][j]);
                    System.out.println(i+" , "+j);
                }
            }
        }
    }
    
    public void putMarkPlayer(Box button){
        ImageIcon icon = null;
        
        if ( !button.GAP )
            return;
        
        if(this.turn == PLAYER1)
            setBoxImage(button,"/imagesAI/o.gif");            
        else
            setBoxImage(button,"/imagesAI/x.png");//            
        /**/
        /*store in the board the player representation */
        Board[button.getIndex()] = turn;
        
        /*Change turn.*/
        turn = ( turn == PLAYER1 ) ? PLAYER2 : PLAYER1;
    }
    
    public void setBoxImage(Box button, String url){
        ImageIcon icon = null;
        icon = new ImageIcon(this.getClass().getResource(url));
        icon = new ImageIcon(icon.getImage().getScaledInstance( 90, 90, java.awt.Image.SCALE_DEFAULT));
        button.A.setIcon(icon);
        button.setGAP(false);
        button.A.removeActionListener(this);
    }
    
    public void putMarkComputer( int index ){
        int cont = 0;
        if( index == -1 ) return;
        for(int i = 0; i < 3; i++){
            for(int j = 0; j < 3; j++){
                if(index == cont)
                    setBoxImage(BOARD[i][j],"/imagesAI/x.png");
                cont ++ ; 
            }
        }
        this.Board[index] = 2;
        /*Change Turn.  */
        turn = ( turn == PLAYER1 ) ? PLAYER2 : PLAYER1;
    }
    
    /*Return 0 if it's tie, 1 if player 1 won y 2 if player 2 won*/
    public int finished(){
        /*We check if the game finished.*/
        /*rows*/
        if ( Board[0] == Board[1] && Board[0] == Board[2] && Board[0] != 0 )
            return Board[0];
        else if ( Board[3] == Board[4] && Board[3] == Board[5]  && Board[3] != 0  )
            return Board[3];
        else if ( Board[6] == Board[7] && Board[6]== Board[8]  && Board[6] != 0 )
            return Board[6];
        /*Columns*/
        else if( Board[0] == Board[3] && Board[0] == Board[6]  && Board[0] != 0 )
            return Board[0];
        else if ( Board[1] == Board[4] && Board[1] == Board[7]  && Board[1] != 0  )
            return Board[1];
        else if ( Board[2] == Board[5] && Board[2] == Board[8]  && Board[2] != 0 )
            return Board[2];
        /*Diagonals*/
        else if ( Board[0] == Board[4] && Board[0] == Board[8] && Board[0] !=0 )
            return Board[0];
        else if ( Board[2] == Board[4] && Board[2] == Board[6] && Board[2] != 0 )
            return Board[2];
        
        return 0;
        
    }
    
    public boolean full(){
        boolean res = true;
        for ( int i = 0; i < Board.length; i ++ )
            if ( Board[i] == 0 ){
                res = false;
                break;
            }
        
        return res;
    }
    
    public void fillBoard(){
        int index = 0;
        BOARD =new Box[3][3];
        ImageIcon icon=null;
        for( int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
                BOARD [i][j] = new Box();
                BOARD [i][j].A.setBounds((i*45)+10, (j*45)+10, 42, 42);
                BOARD [i][j].A.addActionListener(this);
                BOARD [i][j].setIndex(index);
                this.panel2.add(BOARD[i][j].A);
                index++;
            }
        }    
    }
    
    public void resetGame(){
        
        //fill the Board with 0s*/
        Arrays.fill(Board,0);
        int cont=0;
        for( int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
                BOARD [i][j].A.setIcon(null);
                BOARD [i][j].A.addActionListener(this);
                BOARD [i][j].setGAP(true);
                System.out.println(Board[cont]);
                cont ++;
            }
        }
        
        /*Change the General Turn.*/
        if ( this.type_game == MANvsCOMPUTER )
            GeneralTurn = PLAYER1;
        else
            GeneralTurn = ( GeneralTurn == PLAYER1 ) ? PLAYER2 : PLAYER1;
        
        turn = GeneralTurn;
        
        /*Playing.*/
        if ( turn == PLAYER1 )
            message( "Turn of " +player1);
        else
            message( "Turn of " +player2);
        
        playing = true;
        finished = false;
    }   
}